<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.tju.scs.TinyNetBackend.mapper.Gas_engineMapper" >
  <resultMap id="BaseResultMap" type="edu.tju.scs.TinyNetBackend.model.po.Gas_engine" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="ratedPower" property="ratedPower" jdbcType="DOUBLE" />
    <result column="mLoadRate" property="mLoadRate" jdbcType="DOUBLE" />
    <result column="coWaterPowerRatio" property="coWaterPowerRatio" jdbcType="DOUBLE" />
    <result column="gasEleRatio" property="gasEleRatio" jdbcType="DOUBLE" />
    <result column="lifetime" property="lifetime" jdbcType="DOUBLE" />
    <result column="number1" property="number1" jdbcType="INTEGER" />
    <result column="number2" property="number2" jdbcType="INTEGER" />
    <result column="number3" property="number3" jdbcType="INTEGER" />
    <result column="number4" property="number4" jdbcType="INTEGER" />
    <result column="fBuildCost1" property="fBuildCost1" jdbcType="DOUBLE" />
    <result column="fBuildCost2" property="fBuildCost2" jdbcType="DOUBLE" />
    <result column="fBuildCost3" property="fBuildCost3" jdbcType="DOUBLE" />
    <result column="fBuildCost4" property="fBuildCost4" jdbcType="DOUBLE" />
    <result column="rBuildCost1" property="rBuildCost1" jdbcType="DOUBLE" />
    <result column="rBuildCost2" property="rBuildCost2" jdbcType="DOUBLE" />
    <result column="rBuildCost3" property="rBuildCost3" jdbcType="DOUBLE" />
    <result column="rBuildCost4" property="rBuildCost4" jdbcType="DOUBLE" />
    <result column="operCost1" property="operCost1" jdbcType="DOUBLE" />
    <result column="operCost2" property="operCost2" jdbcType="DOUBLE" />
    <result column="operCost3" property="operCost3" jdbcType="DOUBLE" />
    <result column="operCost4" property="operCost4" jdbcType="DOUBLE" />
    <result column="outPower1" property="outPower1" jdbcType="VARCHAR" />
    <result column="outPower2" property="outPower2" jdbcType="VARCHAR" />
    <result column="outPower3" property="outPower3" jdbcType="VARCHAR" />
    <result column="fuelUse1" property="fuelUse1" jdbcType="VARCHAR" />
    <result column="fuelUse2" property="fuelUse2" jdbcType="VARCHAR" />
    <result column="fuelUse3" property="fuelUse3" jdbcType="VARCHAR" />
    <result column="owner" property="owner" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, ratedPower, mLoadRate, coWaterPowerRatio, gasEleRatio, lifetime, number1, 
    number2, number3, number4, fBuildCost1, fBuildCost2, fBuildCost3, fBuildCost4, rBuildCost1, 
    rBuildCost2, rBuildCost3, rBuildCost4, operCost1, operCost2, operCost3, operCost4, 
    outPower1, outPower2, outPower3, fuelUse1, fuelUse2, fuelUse3, owner
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from gas_engine
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByOwner" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from gas_engine
    where owner = #{username,jdbcType=VARCHAR}
    LIMIT #{pi},#{ps}
  </select>

  <select id="selectByOwner1" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from gas_engine
    where owner = #{username,jdbcType=VARCHAR}
    AND name REGEXP #{val}
    LIMIT #{pi},#{ps}
  </select>

  <select id="countB" resultType="Integer">
    select count(*) from gas_engine
  </select>

  <select id="countB1" resultType="Integer" parameterType="map">
    select count(*) from gas_engine
    where name REGEXP #{val}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from gas_engine
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.tju.scs.TinyNetBackend.model.po.Gas_engine" >
    insert into gas_engine (id, name, ratedPower, 
      mLoadRate, coWaterPowerRatio, gasEleRatio, 
      lifetime, number1, number2, 
      number3, number4, fBuildCost1, 
      fBuildCost2, fBuildCost3, fBuildCost4, 
      rBuildCost1, rBuildCost2, rBuildCost3, 
      rBuildCost4, operCost1, operCost2, 
      operCost3, operCost4, outPower1, 
      outPower2, outPower3, fuelUse1, 
      fuelUse2, fuelUse3, owner
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{ratedPower,jdbcType=DOUBLE}, 
      #{mLoadRate,jdbcType=DOUBLE}, #{coWaterPowerRatio,jdbcType=DOUBLE}, #{gasEleRatio,jdbcType=DOUBLE}, 
      #{lifetime,jdbcType=DOUBLE}, #{number1,jdbcType=INTEGER}, #{number2,jdbcType=INTEGER}, 
      #{number3,jdbcType=INTEGER}, #{number4,jdbcType=INTEGER}, #{fBuildCost1,jdbcType=DOUBLE}, 
      #{fBuildCost2,jdbcType=DOUBLE}, #{fBuildCost3,jdbcType=DOUBLE}, #{fBuildCost4,jdbcType=DOUBLE}, 
      #{rBuildCost1,jdbcType=DOUBLE}, #{rBuildCost2,jdbcType=DOUBLE}, #{rBuildCost3,jdbcType=DOUBLE}, 
      #{rBuildCost4,jdbcType=DOUBLE}, #{operCost1,jdbcType=DOUBLE}, #{operCost2,jdbcType=DOUBLE}, 
      #{operCost3,jdbcType=DOUBLE}, #{operCost4,jdbcType=DOUBLE}, #{outPower1,jdbcType=VARCHAR}, 
      #{outPower2,jdbcType=VARCHAR}, #{outPower3,jdbcType=VARCHAR}, #{fuelUse1,jdbcType=VARCHAR}, 
      #{fuelUse2,jdbcType=VARCHAR}, #{fuelUse3,jdbcType=VARCHAR}, #{owner,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.tju.scs.TinyNetBackend.model.po.Gas_engine" >
    insert into gas_engine
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="ratedPower != null" >
        ratedPower,
      </if>
      <if test="mLoadRate != null" >
        mLoadRate,
      </if>
      <if test="coWaterPowerRatio != null" >
        coWaterPowerRatio,
      </if>
      <if test="gasEleRatio != null" >
        gasEleRatio,
      </if>
      <if test="lifetime != null" >
        lifetime,
      </if>
      <if test="number1 != null" >
        number1,
      </if>
      <if test="number2 != null" >
        number2,
      </if>
      <if test="number3 != null" >
        number3,
      </if>
      <if test="number4 != null" >
        number4,
      </if>
      <if test="fBuildCost1 != null" >
        fBuildCost1,
      </if>
      <if test="fBuildCost2 != null" >
        fBuildCost2,
      </if>
      <if test="fBuildCost3 != null" >
        fBuildCost3,
      </if>
      <if test="fBuildCost4 != null" >
        fBuildCost4,
      </if>
      <if test="rBuildCost1 != null" >
        rBuildCost1,
      </if>
      <if test="rBuildCost2 != null" >
        rBuildCost2,
      </if>
      <if test="rBuildCost3 != null" >
        rBuildCost3,
      </if>
      <if test="rBuildCost4 != null" >
        rBuildCost4,
      </if>
      <if test="operCost1 != null" >
        operCost1,
      </if>
      <if test="operCost2 != null" >
        operCost2,
      </if>
      <if test="operCost3 != null" >
        operCost3,
      </if>
      <if test="operCost4 != null" >
        operCost4,
      </if>
      <if test="outPower1 != null" >
        outPower1,
      </if>
      <if test="outPower2 != null" >
        outPower2,
      </if>
      <if test="outPower3 != null" >
        outPower3,
      </if>
      <if test="fuelUse1 != null" >
        fuelUse1,
      </if>
      <if test="fuelUse2 != null" >
        fuelUse2,
      </if>
      <if test="fuelUse3 != null" >
        fuelUse3,
      </if>
      <if test="owner != null" >
        owner,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="ratedPower != null" >
        #{ratedPower,jdbcType=DOUBLE},
      </if>
      <if test="mLoadRate != null" >
        #{mLoadRate,jdbcType=DOUBLE},
      </if>
      <if test="coWaterPowerRatio != null" >
        #{coWaterPowerRatio,jdbcType=DOUBLE},
      </if>
      <if test="gasEleRatio != null" >
        #{gasEleRatio,jdbcType=DOUBLE},
      </if>
      <if test="lifetime != null" >
        #{lifetime,jdbcType=DOUBLE},
      </if>
      <if test="number1 != null" >
        #{number1,jdbcType=INTEGER},
      </if>
      <if test="number2 != null" >
        #{number2,jdbcType=INTEGER},
      </if>
      <if test="number3 != null" >
        #{number3,jdbcType=INTEGER},
      </if>
      <if test="number4 != null" >
        #{number4,jdbcType=INTEGER},
      </if>
      <if test="fBuildCost1 != null" >
        #{fBuildCost1,jdbcType=DOUBLE},
      </if>
      <if test="fBuildCost2 != null" >
        #{fBuildCost2,jdbcType=DOUBLE},
      </if>
      <if test="fBuildCost3 != null" >
        #{fBuildCost3,jdbcType=DOUBLE},
      </if>
      <if test="fBuildCost4 != null" >
        #{fBuildCost4,jdbcType=DOUBLE},
      </if>
      <if test="rBuildCost1 != null" >
        #{rBuildCost1,jdbcType=DOUBLE},
      </if>
      <if test="rBuildCost2 != null" >
        #{rBuildCost2,jdbcType=DOUBLE},
      </if>
      <if test="rBuildCost3 != null" >
        #{rBuildCost3,jdbcType=DOUBLE},
      </if>
      <if test="rBuildCost4 != null" >
        #{rBuildCost4,jdbcType=DOUBLE},
      </if>
      <if test="operCost1 != null" >
        #{operCost1,jdbcType=DOUBLE},
      </if>
      <if test="operCost2 != null" >
        #{operCost2,jdbcType=DOUBLE},
      </if>
      <if test="operCost3 != null" >
        #{operCost3,jdbcType=DOUBLE},
      </if>
      <if test="operCost4 != null" >
        #{operCost4,jdbcType=DOUBLE},
      </if>
      <if test="outPower1 != null" >
        #{outPower1,jdbcType=VARCHAR},
      </if>
      <if test="outPower2 != null" >
        #{outPower2,jdbcType=VARCHAR},
      </if>
      <if test="outPower3 != null" >
        #{outPower3,jdbcType=VARCHAR},
      </if>
      <if test="fuelUse1 != null" >
        #{fuelUse1,jdbcType=VARCHAR},
      </if>
      <if test="fuelUse2 != null" >
        #{fuelUse2,jdbcType=VARCHAR},
      </if>
      <if test="fuelUse3 != null" >
        #{fuelUse3,jdbcType=VARCHAR},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.tju.scs.TinyNetBackend.model.po.Gas_engine" >
    update gas_engine
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="ratedPower != null" >
        ratedPower = #{ratedPower,jdbcType=DOUBLE},
      </if>
      <if test="mLoadRate != null" >
        mLoadRate = #{mLoadRate,jdbcType=DOUBLE},
      </if>
      <if test="coWaterPowerRatio != null" >
        coWaterPowerRatio = #{coWaterPowerRatio,jdbcType=DOUBLE},
      </if>
      <if test="gasEleRatio != null" >
        gasEleRatio = #{gasEleRatio,jdbcType=DOUBLE},
      </if>
      <if test="lifetime != null" >
        lifetime = #{lifetime,jdbcType=DOUBLE},
      </if>
      <if test="number1 != null" >
        number1 = #{number1,jdbcType=INTEGER},
      </if>
      <if test="number2 != null" >
        number2 = #{number2,jdbcType=INTEGER},
      </if>
      <if test="number3 != null" >
        number3 = #{number3,jdbcType=INTEGER},
      </if>
      <if test="number4 != null" >
        number4 = #{number4,jdbcType=INTEGER},
      </if>
      <if test="fBuildCost1 != null" >
        fBuildCost1 = #{fBuildCost1,jdbcType=DOUBLE},
      </if>
      <if test="fBuildCost2 != null" >
        fBuildCost2 = #{fBuildCost2,jdbcType=DOUBLE},
      </if>
      <if test="fBuildCost3 != null" >
        fBuildCost3 = #{fBuildCost3,jdbcType=DOUBLE},
      </if>
      <if test="fBuildCost4 != null" >
        fBuildCost4 = #{fBuildCost4,jdbcType=DOUBLE},
      </if>
      <if test="rBuildCost1 != null" >
        rBuildCost1 = #{rBuildCost1,jdbcType=DOUBLE},
      </if>
      <if test="rBuildCost2 != null" >
        rBuildCost2 = #{rBuildCost2,jdbcType=DOUBLE},
      </if>
      <if test="rBuildCost3 != null" >
        rBuildCost3 = #{rBuildCost3,jdbcType=DOUBLE},
      </if>
      <if test="rBuildCost4 != null" >
        rBuildCost4 = #{rBuildCost4,jdbcType=DOUBLE},
      </if>
      <if test="operCost1 != null" >
        operCost1 = #{operCost1,jdbcType=DOUBLE},
      </if>
      <if test="operCost2 != null" >
        operCost2 = #{operCost2,jdbcType=DOUBLE},
      </if>
      <if test="operCost3 != null" >
        operCost3 = #{operCost3,jdbcType=DOUBLE},
      </if>
      <if test="operCost4 != null" >
        operCost4 = #{operCost4,jdbcType=DOUBLE},
      </if>
      <if test="outPower1 != null" >
        outPower1 = #{outPower1,jdbcType=VARCHAR},
      </if>
      <if test="outPower2 != null" >
        outPower2 = #{outPower2,jdbcType=VARCHAR},
      </if>
      <if test="outPower3 != null" >
        outPower3 = #{outPower3,jdbcType=VARCHAR},
      </if>
      <if test="fuelUse1 != null" >
        fuelUse1 = #{fuelUse1,jdbcType=VARCHAR},
      </if>
      <if test="fuelUse2 != null" >
        fuelUse2 = #{fuelUse2,jdbcType=VARCHAR},
      </if>
      <if test="fuelUse3 != null" >
        fuelUse3 = #{fuelUse3,jdbcType=VARCHAR},
      </if>
      <if test="owner != null" >
        owner = #{owner,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.tju.scs.TinyNetBackend.model.po.Gas_engine" >
    update gas_engine
    set name = #{name,jdbcType=VARCHAR},
      ratedPower = #{ratedPower,jdbcType=DOUBLE},
      mLoadRate = #{mLoadRate,jdbcType=DOUBLE},
      coWaterPowerRatio = #{coWaterPowerRatio,jdbcType=DOUBLE},
      gasEleRatio = #{gasEleRatio,jdbcType=DOUBLE},
      lifetime = #{lifetime,jdbcType=DOUBLE},
      number1 = #{number1,jdbcType=INTEGER},
      number2 = #{number2,jdbcType=INTEGER},
      number3 = #{number3,jdbcType=INTEGER},
      number4 = #{number4,jdbcType=INTEGER},
      fBuildCost1 = #{fBuildCost1,jdbcType=DOUBLE},
      fBuildCost2 = #{fBuildCost2,jdbcType=DOUBLE},
      fBuildCost3 = #{fBuildCost3,jdbcType=DOUBLE},
      fBuildCost4 = #{fBuildCost4,jdbcType=DOUBLE},
      rBuildCost1 = #{rBuildCost1,jdbcType=DOUBLE},
      rBuildCost2 = #{rBuildCost2,jdbcType=DOUBLE},
      rBuildCost3 = #{rBuildCost3,jdbcType=DOUBLE},
      rBuildCost4 = #{rBuildCost4,jdbcType=DOUBLE},
      operCost1 = #{operCost1,jdbcType=DOUBLE},
      operCost2 = #{operCost2,jdbcType=DOUBLE},
      operCost3 = #{operCost3,jdbcType=DOUBLE},
      operCost4 = #{operCost4,jdbcType=DOUBLE},
      outPower1 = #{outPower1,jdbcType=VARCHAR},
      outPower2 = #{outPower2,jdbcType=VARCHAR},
      outPower3 = #{outPower3,jdbcType=VARCHAR},
      fuelUse1 = #{fuelUse1,jdbcType=VARCHAR},
      fuelUse2 = #{fuelUse2,jdbcType=VARCHAR},
      fuelUse3 = #{fuelUse3,jdbcType=VARCHAR},
      owner = #{owner,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
