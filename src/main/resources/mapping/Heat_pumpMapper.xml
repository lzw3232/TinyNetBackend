<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.tju.scs.TinyNetBackend.mapper.Heat_pumpMapper" >
  <resultMap id="BaseResultMap" type="edu.tju.scs.TinyNetBackend.model.po.Heat_pump" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="thermalRatio" property="thermalRatio" jdbcType="DOUBLE" />
    <result column="refrigerationRatio" property="refrigerationRatio" jdbcType="DOUBLE" />
    <result column="manufacturer" property="manufacturer" jdbcType="VARCHAR" />
    <result column="ratedThermoElectricPower" property="ratedThermoElectricPower" jdbcType="DOUBLE" />
    <result column="ratedRefrigeratingElectricPower" property="ratedRefrigeratingElectricPower" jdbcType="DOUBLE" />
    <result column="life" property="life" jdbcType="DOUBLE" />
    <result column="heatingConsumptionCoefficient" property="heatingConsumptionCoefficient" jdbcType="DOUBLE" />
    <result column="refrigerationConsumptionCoefficient" property="refrigerationConsumptionCoefficient" jdbcType="DOUBLE" />
    <result column="capacity1" property="capacity1" jdbcType="INTEGER" />
    <result column="capacity2" property="capacity2" jdbcType="INTEGER" />
    <result column="capacity3" property="capacity3" jdbcType="INTEGER" />
    <result column="capacity4" property="capacity4" jdbcType="INTEGER" />
    <result column="initialCost1" property="initialCost1" jdbcType="DOUBLE" />
    <result column="initialCost2" property="initialCost2" jdbcType="DOUBLE" />
    <result column="initialCost3" property="initialCost3" jdbcType="DOUBLE" />
    <result column="initialCost4" property="initialCost4" jdbcType="DOUBLE" />
    <result column="replacementCost1" property="replacementCost1" jdbcType="DOUBLE" />
    <result column="replacementCost2" property="replacementCost2" jdbcType="DOUBLE" />
    <result column="replacementCost3" property="replacementCost3" jdbcType="DOUBLE" />
    <result column="replacementCost4" property="replacementCost4" jdbcType="DOUBLE" />
    <result column="maintenanceCost1" property="maintenanceCost1" jdbcType="DOUBLE" />
    <result column="maintenanceCost2" property="maintenanceCost2" jdbcType="DOUBLE" />
    <result column="maintenanceCost3" property="maintenanceCost3" jdbcType="DOUBLE" />
    <result column="maintenanceCost4" property="maintenanceCost4" jdbcType="DOUBLE" />
    <result column="owner" property="owner" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, thermalRatio, refrigerationRatio, manufacturer, ratedThermoElectricPower, 
    ratedRefrigeratingElectricPower, life, heatingConsumptionCoefficient, refrigerationConsumptionCoefficient, 
    capacity1, capacity2, capacity3, capacity4, initialCost1, initialCost2, initialCost3, 
    initialCost4, replacementCost1, replacementCost2, replacementCost3, replacementCost4, 
    maintenanceCost1, maintenanceCost2, maintenanceCost3, maintenanceCost4, owner
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from heat_pump
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByOwner" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from heat_pump
    where owner = #{username,jdbcType=VARCHAR}
    LIMIT #{pi},#{ps}
  </select>

  <select id="selectByOwner1" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from heat_pump
    where owner = #{username,jdbcType=VARCHAR}
    AND name REGEXP #{val}
    LIMIT #{pi},#{ps}
  </select>

  <select id="countB" resultType="Integer">
    select count(*) from heat_pump
  </select>

  <select id="countB1" resultType="Integer" parameterType="map">
    select count(*) from heat_pump
    where name REGEXP #{val}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from heat_pump
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.tju.scs.TinyNetBackend.model.po.Heat_pump" >
    insert into heat_pump (id, name, thermalRatio, 
      refrigerationRatio, manufacturer, ratedThermoElectricPower, 
      ratedRefrigeratingElectricPower, life, heatingConsumptionCoefficient, 
      refrigerationConsumptionCoefficient, capacity1, 
      capacity2, capacity3, capacity4, 
      initialCost1, initialCost2, initialCost3, 
      initialCost4, replacementCost1, replacementCost2, 
      replacementCost3, replacementCost4, maintenanceCost1, 
      maintenanceCost2, maintenanceCost3, maintenanceCost4, 
      owner)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{thermalRatio,jdbcType=DOUBLE}, 
      #{refrigerationRatio,jdbcType=DOUBLE}, #{manufacturer,jdbcType=VARCHAR}, #{ratedThermoElectricPower,jdbcType=DOUBLE}, 
      #{ratedRefrigeratingElectricPower,jdbcType=DOUBLE}, #{life,jdbcType=DOUBLE}, #{heatingConsumptionCoefficient,jdbcType=DOUBLE}, 
      #{refrigerationConsumptionCoefficient,jdbcType=DOUBLE}, #{capacity1,jdbcType=INTEGER}, 
      #{capacity2,jdbcType=INTEGER}, #{capacity3,jdbcType=INTEGER}, #{capacity4,jdbcType=INTEGER}, 
      #{initialCost1,jdbcType=DOUBLE}, #{initialCost2,jdbcType=DOUBLE}, #{initialCost3,jdbcType=DOUBLE}, 
      #{initialCost4,jdbcType=DOUBLE}, #{replacementCost1,jdbcType=DOUBLE}, #{replacementCost2,jdbcType=DOUBLE}, 
      #{replacementCost3,jdbcType=DOUBLE}, #{replacementCost4,jdbcType=DOUBLE}, #{maintenanceCost1,jdbcType=DOUBLE}, 
      #{maintenanceCost2,jdbcType=DOUBLE}, #{maintenanceCost3,jdbcType=DOUBLE}, #{maintenanceCost4,jdbcType=DOUBLE}, 
      #{owner,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.tju.scs.TinyNetBackend.model.po.Heat_pump" >
    insert into heat_pump
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="thermalRatio != null" >
        thermalRatio,
      </if>
      <if test="refrigerationRatio != null" >
        refrigerationRatio,
      </if>
      <if test="manufacturer != null" >
        manufacturer,
      </if>
      <if test="ratedThermoElectricPower != null" >
        ratedThermoElectricPower,
      </if>
      <if test="ratedRefrigeratingElectricPower != null" >
        ratedRefrigeratingElectricPower,
      </if>
      <if test="life != null" >
        life,
      </if>
      <if test="heatingConsumptionCoefficient != null" >
        heatingConsumptionCoefficient,
      </if>
      <if test="refrigerationConsumptionCoefficient != null" >
        refrigerationConsumptionCoefficient,
      </if>
      <if test="capacity1 != null" >
        capacity1,
      </if>
      <if test="capacity2 != null" >
        capacity2,
      </if>
      <if test="capacity3 != null" >
        capacity3,
      </if>
      <if test="capacity4 != null" >
        capacity4,
      </if>
      <if test="initialCost1 != null" >
        initialCost1,
      </if>
      <if test="initialCost2 != null" >
        initialCost2,
      </if>
      <if test="initialCost3 != null" >
        initialCost3,
      </if>
      <if test="initialCost4 != null" >
        initialCost4,
      </if>
      <if test="replacementCost1 != null" >
        replacementCost1,
      </if>
      <if test="replacementCost2 != null" >
        replacementCost2,
      </if>
      <if test="replacementCost3 != null" >
        replacementCost3,
      </if>
      <if test="replacementCost4 != null" >
        replacementCost4,
      </if>
      <if test="maintenanceCost1 != null" >
        maintenanceCost1,
      </if>
      <if test="maintenanceCost2 != null" >
        maintenanceCost2,
      </if>
      <if test="maintenanceCost3 != null" >
        maintenanceCost3,
      </if>
      <if test="maintenanceCost4 != null" >
        maintenanceCost4,
      </if>
      <if test="owner != null" >
        owner,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="thermalRatio != null" >
        #{thermalRatio,jdbcType=DOUBLE},
      </if>
      <if test="refrigerationRatio != null" >
        #{refrigerationRatio,jdbcType=DOUBLE},
      </if>
      <if test="manufacturer != null" >
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="ratedThermoElectricPower != null" >
        #{ratedThermoElectricPower,jdbcType=DOUBLE},
      </if>
      <if test="ratedRefrigeratingElectricPower != null" >
        #{ratedRefrigeratingElectricPower,jdbcType=DOUBLE},
      </if>
      <if test="life != null" >
        #{life,jdbcType=DOUBLE},
      </if>
      <if test="heatingConsumptionCoefficient != null" >
        #{heatingConsumptionCoefficient,jdbcType=DOUBLE},
      </if>
      <if test="refrigerationConsumptionCoefficient != null" >
        #{refrigerationConsumptionCoefficient,jdbcType=DOUBLE},
      </if>
      <if test="capacity1 != null" >
        #{capacity1,jdbcType=INTEGER},
      </if>
      <if test="capacity2 != null" >
        #{capacity2,jdbcType=INTEGER},
      </if>
      <if test="capacity3 != null" >
        #{capacity3,jdbcType=INTEGER},
      </if>
      <if test="capacity4 != null" >
        #{capacity4,jdbcType=INTEGER},
      </if>
      <if test="initialCost1 != null" >
        #{initialCost1,jdbcType=DOUBLE},
      </if>
      <if test="initialCost2 != null" >
        #{initialCost2,jdbcType=DOUBLE},
      </if>
      <if test="initialCost3 != null" >
        #{initialCost3,jdbcType=DOUBLE},
      </if>
      <if test="initialCost4 != null" >
        #{initialCost4,jdbcType=DOUBLE},
      </if>
      <if test="replacementCost1 != null" >
        #{replacementCost1,jdbcType=DOUBLE},
      </if>
      <if test="replacementCost2 != null" >
        #{replacementCost2,jdbcType=DOUBLE},
      </if>
      <if test="replacementCost3 != null" >
        #{replacementCost3,jdbcType=DOUBLE},
      </if>
      <if test="replacementCost4 != null" >
        #{replacementCost4,jdbcType=DOUBLE},
      </if>
      <if test="maintenanceCost1 != null" >
        #{maintenanceCost1,jdbcType=DOUBLE},
      </if>
      <if test="maintenanceCost2 != null" >
        #{maintenanceCost2,jdbcType=DOUBLE},
      </if>
      <if test="maintenanceCost3 != null" >
        #{maintenanceCost3,jdbcType=DOUBLE},
      </if>
      <if test="maintenanceCost4 != null" >
        #{maintenanceCost4,jdbcType=DOUBLE},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.tju.scs.TinyNetBackend.model.po.Heat_pump" >
    update heat_pump
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="thermalRatio != null" >
        thermalRatio = #{thermalRatio,jdbcType=DOUBLE},
      </if>
      <if test="refrigerationRatio != null" >
        refrigerationRatio = #{refrigerationRatio,jdbcType=DOUBLE},
      </if>
      <if test="manufacturer != null" >
        manufacturer = #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="ratedThermoElectricPower != null" >
        ratedThermoElectricPower = #{ratedThermoElectricPower,jdbcType=DOUBLE},
      </if>
      <if test="ratedRefrigeratingElectricPower != null" >
        ratedRefrigeratingElectricPower = #{ratedRefrigeratingElectricPower,jdbcType=DOUBLE},
      </if>
      <if test="life != null" >
        life = #{life,jdbcType=DOUBLE},
      </if>
      <if test="heatingConsumptionCoefficient != null" >
        heatingConsumptionCoefficient = #{heatingConsumptionCoefficient,jdbcType=DOUBLE},
      </if>
      <if test="refrigerationConsumptionCoefficient != null" >
        refrigerationConsumptionCoefficient = #{refrigerationConsumptionCoefficient,jdbcType=DOUBLE},
      </if>
      <if test="capacity1 != null" >
        capacity1 = #{capacity1,jdbcType=INTEGER},
      </if>
      <if test="capacity2 != null" >
        capacity2 = #{capacity2,jdbcType=INTEGER},
      </if>
      <if test="capacity3 != null" >
        capacity3 = #{capacity3,jdbcType=INTEGER},
      </if>
      <if test="capacity4 != null" >
        capacity4 = #{capacity4,jdbcType=INTEGER},
      </if>
      <if test="initialCost1 != null" >
        initialCost1 = #{initialCost1,jdbcType=DOUBLE},
      </if>
      <if test="initialCost2 != null" >
        initialCost2 = #{initialCost2,jdbcType=DOUBLE},
      </if>
      <if test="initialCost3 != null" >
        initialCost3 = #{initialCost3,jdbcType=DOUBLE},
      </if>
      <if test="initialCost4 != null" >
        initialCost4 = #{initialCost4,jdbcType=DOUBLE},
      </if>
      <if test="replacementCost1 != null" >
        replacementCost1 = #{replacementCost1,jdbcType=DOUBLE},
      </if>
      <if test="replacementCost2 != null" >
        replacementCost2 = #{replacementCost2,jdbcType=DOUBLE},
      </if>
      <if test="replacementCost3 != null" >
        replacementCost3 = #{replacementCost3,jdbcType=DOUBLE},
      </if>
      <if test="replacementCost4 != null" >
        replacementCost4 = #{replacementCost4,jdbcType=DOUBLE},
      </if>
      <if test="maintenanceCost1 != null" >
        maintenanceCost1 = #{maintenanceCost1,jdbcType=DOUBLE},
      </if>
      <if test="maintenanceCost2 != null" >
        maintenanceCost2 = #{maintenanceCost2,jdbcType=DOUBLE},
      </if>
      <if test="maintenanceCost3 != null" >
        maintenanceCost3 = #{maintenanceCost3,jdbcType=DOUBLE},
      </if>
      <if test="maintenanceCost4 != null" >
        maintenanceCost4 = #{maintenanceCost4,jdbcType=DOUBLE},
      </if>
      <if test="owner != null" >
        owner = #{owner,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.tju.scs.TinyNetBackend.model.po.Heat_pump" >
    update heat_pump
    set name = #{name,jdbcType=VARCHAR},
      thermalRatio = #{thermalRatio,jdbcType=DOUBLE},
      refrigerationRatio = #{refrigerationRatio,jdbcType=DOUBLE},
      manufacturer = #{manufacturer,jdbcType=VARCHAR},
      ratedThermoElectricPower = #{ratedThermoElectricPower,jdbcType=DOUBLE},
      ratedRefrigeratingElectricPower = #{ratedRefrigeratingElectricPower,jdbcType=DOUBLE},
      life = #{life,jdbcType=DOUBLE},
      heatingConsumptionCoefficient = #{heatingConsumptionCoefficient,jdbcType=DOUBLE},
      refrigerationConsumptionCoefficient = #{refrigerationConsumptionCoefficient,jdbcType=DOUBLE},
      capacity1 = #{capacity1,jdbcType=INTEGER},
      capacity2 = #{capacity2,jdbcType=INTEGER},
      capacity3 = #{capacity3,jdbcType=INTEGER},
      capacity4 = #{capacity4,jdbcType=INTEGER},
      initialCost1 = #{initialCost1,jdbcType=DOUBLE},
      initialCost2 = #{initialCost2,jdbcType=DOUBLE},
      initialCost3 = #{initialCost3,jdbcType=DOUBLE},
      initialCost4 = #{initialCost4,jdbcType=DOUBLE},
      replacementCost1 = #{replacementCost1,jdbcType=DOUBLE},
      replacementCost2 = #{replacementCost2,jdbcType=DOUBLE},
      replacementCost3 = #{replacementCost3,jdbcType=DOUBLE},
      replacementCost4 = #{replacementCost4,jdbcType=DOUBLE},
      maintenanceCost1 = #{maintenanceCost1,jdbcType=DOUBLE},
      maintenanceCost2 = #{maintenanceCost2,jdbcType=DOUBLE},
      maintenanceCost3 = #{maintenanceCost3,jdbcType=DOUBLE},
      maintenanceCost4 = #{maintenanceCost4,jdbcType=DOUBLE},
      owner = #{owner,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
